window "show"
window "dimensions" 1000 700

camx = 0
camy = 0

anim_start = 1
anim_frame = 1
anim_length = 4
current_anim = "idle"
current_dialogue = ""
// sets the current animation

def "new_game"
playerx = 0
playery = 0

playermapx = 0
playermapy = 0
playermapz = 1
endef

debug = true

loading = []

github_link = "https://raw.githubusercontent.com/Kasairoe/oki/main/"
network "get" github_link ++ "levels_data.json"
room_bounds = data.[1].destr
collisions = data.[2].destr
interactables = data.[3].destr
// sets up vital game data

def "run_movement"
  prevx = playerx
  prevy = playery

  if up.pressed "playeryvel += speed"
  if down.pressed "playeryvel -= speed"
  if left.pressed "playerxvel -= speed"
  if right.pressed "playerxvel += speed"

  playerxvel *= 0.6
  playeryvel *= 0.6
  playerx += playerxvel
  playery += playeryvel

  px = playerx * game_scale / 300
  py = playery * game_scale / 300

  lpx = px.round
  lpy = py.round
  location = [].append(lpx).append(lpy)
endef

def "run_interactions"
  if "e".pressed.not "can = true"
  current_interactables = interactables.key(map_location)
  count = 0
  loop current_interactables.len (
    count += 1
    c = current_interactables.[count]
    x = c.[1].destr * game_scale / 300
    y = c.[2].destr * game_scale / 300
    if location.dist(x,y).round < c.[4].destr (
      loc 999 -2 0 50
      image github_link ++ "ui/interact.png" 70
      if "e".pressed and can "run c.[3]"
      if "e".pressed "can = false"
    )
  )
endef

def "run_animator"
  if anim_start != 1 and up.pressed.not and left.pressed.not and right.pressed.not and down.pressed.not (
    anim_start = 1
    anim_frame = 1
    anim_length = 4
  )
  
  if current_anim != "up" and up.pressed (
    anim_start = 5
    anim_frame = 5
    anim_length = 10
    current_anim = "up"
  )
  
  if current_anim != "left" and left.pressed (
    anim_start = 5
    anim_frame = 5
    anim_length = 10
    current_anim = "left"
  )
  
  if current_anim != "down" and down.pressed (
    anim_start = 5
    anim_frame = 5
    anim_length = 10
    current_anim = "down"
  )
  
  if current_anim != "right" and right.pressed (
    anim_start = 5
    anim_frame = 5
    anim_length = 10
    current_anim = "right"
  )
endef

def "run_collisions"
  current_room_bounds = room_bounds.key(map_location)
  // gets the current set of room max xs and ys

  if playerx > current_room_bounds.[1].destr "goback"
  if playerx < current_room_bounds.[2].destr "goback"
  if playery > current_room_bounds.[3].destr "goback"
  if playery < current_room_bounds.[4].destr "goback"
  // restricts the player from going outside of the room boundaries
  
  current_collisions = collisions.key(map_location)
  // gets the current set of colliders for the room

  count = 0
  loop current_collisions.len (
    count += 1
    c = current_collisions.[count]
    x = c.[1].destr * game_scale / 300
    y = c.[2].destr * game_scale / 300
    if location.dist(x,y) < c.[3].destr "goback"
    if debug == true "goto x y"
    if debug == true "c #fff"
    if debug == true "square 0 0 c.[3].destr * 2"
  )
endef

def "load" "link"
  link = github_link ++ link ++ ".png"
  image link 100
  loading = loading.append(link)
  loading_total += 1
endef

def "loadall"
  loading_total = 0
  loaded = false
  load "ui/interact"
  load "ui/Dialogue_box"
  count = 0
  loop 4 (
    count += 1
    load "animations/player/idle/" ++ count
  )
  count = 0
  loop 10 (
    count += 1
    load "animations/player/down/" ++ count
  )
  count = 0
  loop 10 (
    count += 1
    load "animations/player/up/" ++ count
  )
  count = 0
  loop 10 (
    count += 1
    load "animations/player/left/" ++ count
  )
  count = 0
  loop 10 (
    count += 1
    load "animations/player/right/" ++ count
  )
endef

def "goback"
  playerx = prevx
  playery = prevy
  playerxvel = 0
  playeryvel = 0
endef

def "finish_loading"
  count = 0
  loop loading.len (
    count += 1
    if loading.[count].imageinfo("loaded") "loading = loading.delete(count)"
    image loading.[count] 0
  )
endef

def "movekeys" "up,down,left,right"
endef

movekeys "w" "s" "a" "d"
// sets movement keybinds

loadall
// loads assets

new_game
// creates a new game

mainloop:

finish_loading

if loading.len > 0 (
  loc 999 999 0 0
  load_percent = loading.len / loading_total
  // calculates the percentage of images loaded
  c #333
  bar 300 20 10 1 - load_percent
  // renders a loading bar for the currently loading images

  import "win-buttons"
  exit
  // exits the script before any more code is run
)
// loading screen

map_location = playermapx ++ "x" ++ playermapy ++ "x" ++ playermapz
current_room = github_link ++ "environments/" ++ map_location ++ ".png"
// sets values that are referenced by other parts of the progrm a lot

if last_room != current_room (
  image "clear" "last_room"
  last_room = current_room
)
// clears out old environment images when you leave the area

game_width = window_width
game_height = window_height
if game_height < game_width "game_scale = game_height"
if game_height > game_width "game_scale = game_width"
// sets the game viewport

anim_frame += 0.3
if anim_frame > anim_length "anim_frame = anim_start"
// animator, loops through frames of current player animation

speed = 4
if "shift".pressed "speed += 3"
// sprint and speed system

image current_room game_scale
// draws the room background

run_animator
// controls the movement animations of the player

run_movement
// controls the movement systems of the player

run_interactions
// controls the interaction system

run_collisions
// controls the collision engine

goto px py
image github_link ++ "animations/player/" ++ current_anim ++ "/" ++ anim_frame.round ++ ".png" game_scale / 6
// renders player

import "win-buttons"
